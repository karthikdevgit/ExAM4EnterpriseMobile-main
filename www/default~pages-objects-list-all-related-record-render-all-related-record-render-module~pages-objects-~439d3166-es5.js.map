{"version":3,"sources":["webpack:///src/app/svcomponents/each-ambutton-render/each-ambutton-render.component.html","webpack:///src/app/svcomponents/each-object-render/each-object-render.component.html","webpack:///src/app/svcomponents/each-related-obj-button-render/each-related-obj-button-render.component.html","webpack:///src/app/svcomponents/tree-view-enabled/tree-view-enabled.component.html","webpack:///src/app/svcomponents/tree-view-not-enabled/tree-view-not-enabled.component.html","webpack:///src/app/svcomponents/each-ambutton-render/each-ambutton-render.component.scss","webpack:///src/app/svcomponents/each-ambutton-render/each-ambutton-render.component.ts","webpack:///src/app/svcomponents/each-object-render/each-object-render.component.scss","webpack:///src/app/svcomponents/each-object-render/each-object-render.component.ts","webpack:///src/app/svcomponents/each-related-obj-button-render/each-related-obj-button-render.component.scss","webpack:///src/app/svcomponents/each-related-obj-button-render/each-related-obj-button-render.component.ts","webpack:///src/app/svcomponents/tree-view-enabled/tree-view-enabled.component.scss","webpack:///src/app/svcomponents/tree-view-enabled/tree-view-enabled.component.ts","webpack:///src/app/svcomponents/tree-view-not-enabled/tree-view-not-enabled.component.scss","webpack:///src/app/svcomponents/tree-view-not-enabled/tree-view-not-enabled.component.ts"],"names":["EachAMButtonRenderComponent","router","_this","console","log","eachassessableObject","schemaViewData","currentIndex","am","navigate","amData","JSON","stringify","selector","template","EachObjectRenderComponent","zone","GlobalParamService","gestureCtrl","actionSheetCtrl","isHaveChild","componentRenderSuccess","longPressActive","ishaveChild","relatedObjectsIndex","length","Object","keys","forEach","relatedIndex","childAssessableObjs","Id","cards","cardArray","toArray","i","card","startTime","Date","now","gesture","create","el","nativeElement","threshold","gestureName","onStart","ev","setTimeout","actionSheetopen","onEnd","duration","enable","buttonArray","optionConfigDetailsMap","push","text","handler","allrelatedObject","header","buttons","actionSheet","present","schemaViewData1","relatedIndex1","parentId1","eachassessableObject1","isfrom1","navigationExtras","state","parentId","isFromback","isFrom","trackparamFormObjRedirect","read","EachRelatedObjButtonRenderComponent","TreeViewEnabledComponent","TreeViewNotEnabledComponent","activatedRoute","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","value","parseInt"],"mappings":"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","file":"default~pages-objects-list-all-related-record-render-all-related-record-render-module~pages-objects-~439d3166-es5.js","sourcesContent":["export default \"<ion-row>\\n  <div\\n  \\n  *ngIf=\\\"\\n  schemaViewData &&\\n  schemaViewData[currentIndex] &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap[\\n  eachassessableObject.Id\\n  ] &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap[\\n  eachassessableObject.Id\\n  ].length > 0\\n\\\"\\n  >\\n    <ion-col\\n      *ngFor=\\\"\\n        let am of schemaViewData[currentIndex].amWithAssessableIdMap[\\n          eachassessableObject.Id]\\n      \\\"\\n      (click)=$event.stopPropagation();openRelatedAMsDetailPage(am)\\n    >\\n      <ion-button\\n       *ngIf=\\\"\\n              am &&\\n              am.Name\\n            \\\">{{ am.Name }}</ion-button>\\n    </ion-col>\\n  </div>\\n</ion-row> \\n\";","export default \"\\n<div *ngIf=\\\"schemaViewData && schemaViewData[currentIndex] && schemaViewData[currentIndex].optionConfigDetailsMap && (!schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView || schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView == 'false')\\\">\\n  <ion-card>\\n    \\n    <ion-card-header>\\n        <ion-item lines=\\\"none\\\">\\n          <div *ngIf=\\\"\\n          (!schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView || schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView == 'false')  && ishaveChild(schemaViewData,currentIndex,eachassessableObject)\\\" (click)=\\\"RelatedChildRendercall()\\\">\\n        \\n              <div>\\n                <ion-icon *ngIf=\\\"!isHaveChild\\\" name=\\\"caret-forward-outline\\\"></ion-icon>\\n                <ion-icon *ngIf=\\\"isHaveChild\\\" name=\\\"caret-down-outline\\\"></ion-icon>\\n              </div>\\n          </div>\\n        <ion-card-title >{{\\n          eachassessableObject.Name\\n        }}</ion-card-title>\\n      </ion-item>\\n    </ion-card-header>\\n    <ion-row>\\n      <ion-col\\n        *ngFor=\\\"\\n          let ObjectField of schemaViewData[currentIndex].ViewObjectFieldSet\\n        \\\"\\n      >\\n        <p *ngIf=\\\"eachassessableObject && eachassessableObject[ObjectField.fieldPath]\\\">\\n          {{ ObjectField.label }}<br />{{\\n            eachassessableObject[ObjectField.fieldPath]\\n          }}\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n    <app-each-related-obj-button-render [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-related-obj-button-render>\\n    <app-each-ambutton-render [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-ambutton-render>\\n    <div *ngIf=\\\"schemaViewData && schemaViewData[currentIndex] && schemaViewData[currentIndex].optionConfigDetailsMap && (schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView && (schemaViewData[currentIndex].optionConfigDetailsMap.disableRelatedAM == 'false' || !schemaViewData[currentIndex].optionConfigDetailsMap.disableRelatedAM))\\\">\\n      <div\\n      \\n      *ngIf=\\\"\\n      schemaViewData &&\\n      schemaViewData[currentIndex] &&\\n      schemaViewData[currentIndex].amWithAssessableIdMap &&\\n      schemaViewData[currentIndex].amWithAssessableIdMap[\\n      eachassessableObject.Id\\n      ] &&\\n      schemaViewData[currentIndex].amWithAssessableIdMap[\\n      eachassessableObject.Id\\n      ].length > 0\\n    \\\"\\n      >\\n      <div\\n      *ngFor=\\\"\\n      let am of schemaViewData[currentIndex].amWithAssessableIdMap[\\n        eachassessableObject.Id]\\n    \\\"\\n      >\\n      <app-each-amrender [eachamdetail]=\\\"am\\\" [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-amrender>\\n    </div>\\n    </div>\\n    </div>\\n    </ion-card>\\n  \\n    <div  *ngIf=\\\"isHaveChild\\\">\\n      <div\\n        *ngIf=\\\"\\n          schemaViewData &&\\n          schemaViewData[currentIndex] &&\\n          schemaViewData[currentIndex].relatedObjectsIndex &&\\n          schemaViewData[currentIndex].relatedObjectsIndex.length > 0\\n        \\\"\\n      >\\n        <ion-col\\n          *ngFor=\\\"\\n            let relatedObjectsIndex of schemaViewData[currentIndex]\\n              .relatedObjectsIndex\\n          \\\"\\n        >\\n        <div *ngIf=\\\"relatedObjectsIndex != 0 && eachassessableObject && eachassessableObject.Id && schemaViewData[relatedObjectsIndex] && schemaViewData[relatedObjectsIndex].childAssessableObjs && schemaViewData[relatedObjectsIndex].childAssessableObjs[eachassessableObject.Id]\\\">\\n          <div *ngFor=\\\"let parentassObject of schemaViewData[relatedObjectsIndex].childAssessableObjs[eachassessableObject.Id]\\\">\\n         \\n          <app-each-object-render [eachassessableObject]=\\\"parentassObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"relatedObjectsIndex\\\" [isfromTreeView]=\\\"schemaViewData[relatedObjectsIndex].optionConfigDetailsMap.disableTreeView\\\"></app-each-object-render>\\n        </div>\\n      </div>\\n        </ion-col>\\n      </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"schemaViewData && schemaViewData[currentIndex] && schemaViewData[currentIndex].optionConfigDetailsMap && (schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView && schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView == 'true')\\\">\\n<ion-card>\\n<ion-card-header>\\n  <ion-item lines=\\\"none\\\">\\n    <ion-card-title slot=\\\"start\\\">{{\\n      eachassessableObject.Name\\n    }}</ion-card-title>\\n  </ion-item>\\n</ion-card-header>\\n<ion-row>\\n  <ion-col\\n    *ngFor=\\\"\\n      let ObjectField of schemaViewData[currentIndex].ViewObjectFieldSet\\n    \\\"\\n  >\\n    <p *ngIf=\\\"eachassessableObject && eachassessableObject[ObjectField.fieldPath]\\\">\\n      {{ ObjectField.label }}<br />{{\\n        eachassessableObject[ObjectField.fieldPath]\\n      }}\\n    </p>\\n  </ion-col>\\n</ion-row>\\n<app-each-related-obj-button-render [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-related-obj-button-render>\\n<app-each-ambutton-render [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-ambutton-render>\\n<div *ngIf=\\\"schemaViewData && schemaViewData[currentIndex] && schemaViewData[currentIndex].optionConfigDetailsMap && (schemaViewData[currentIndex].optionConfigDetailsMap.disableTreeView && (schemaViewData[currentIndex].optionConfigDetailsMap.disableRelatedAM == 'false' || !schemaViewData[currentIndex].optionConfigDetailsMap.disableRelatedAM))\\\">\\n  disable Am  false--- {{schemaViewData[currentIndex].optionConfigDetailsMap.disableRelatedAM}}\\n  <div\\n  \\n  *ngIf=\\\"\\n  schemaViewData &&\\n  schemaViewData[currentIndex] &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap[\\n  eachassessableObject.Id\\n  ] &&\\n  schemaViewData[currentIndex].amWithAssessableIdMap[\\n  eachassessableObject.Id\\n  ].length > 0\\n\\\"\\n  >\\n  <div\\n  *ngFor=\\\"\\n  let am of schemaViewData[currentIndex].amWithAssessableIdMap[\\n    eachassessableObject.Id]\\n\\\"\\n  >\\n  <app-each-amrender [eachamdetail]=\\\"am\\\" [eachassessableObject]=\\\"eachassessableObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\"></app-each-amrender>\\n</div>\\n</div>\\n</div>\\n</ion-card>\\n\\n</div>\";","export default \"<div\\n        *ngIf=\\\"\\n          schemaViewData &&\\n          schemaViewData[currentIndex] &&\\n          schemaViewData[currentIndex].relatedObjectsIndex &&\\n          schemaViewData[currentIndex].relatedObjectsIndex.length > 0\\n        \\\"\\n      >\\n        <ion-col\\n          *ngFor=\\\"\\n            let relatedObjectsIndex of schemaViewData[currentIndex]\\n              .relatedObjectsIndex\\n          \\\"\\n        >\\n          <ion-button\\n            *ngIf=\\\"\\n              schemaViewData &&\\n              schemaViewData[relatedObjectsIndex] &&\\n              schemaViewData[relatedObjectsIndex].childAssessableObjs &&\\n              schemaViewData[relatedObjectsIndex].childAssessableObjs[\\n                eachassessableObject.Id\\n              ] &&\\n              schemaViewData[relatedObjectsIndex].childAssessableObjs[\\n                eachassessableObject.Id\\n              ].length > 0\\n            \\\"\\n            (click)=\\\"$event.stopPropagation();relatedObject(schemaViewData,relatedObjectsIndex,eachassessableObject.Id,eachassessableObject,false,$event)\\\"\\n          >\\n            {{\\n              schemaViewData[relatedObjectsIndex].childAssessableObjs[\\n                eachassessableObject.Id\\n              ].length\\n            }}\\n            {{\\n              schemaViewData[relatedObjectsIndex].schemaTemplatepluralLabel\\n            }}</ion-button\\n          >\\n        </ion-col>\\n      </div>\";","export default \"\\n<div *ngIf=\\\"currentIndex == 0\\\">\\n  <div *ngFor=\\\"let parentassObject of schemaViewData[currentIndex].assessableObjs\\\" (click)=\\\"allrelatedObject(schemaViewData,currentIndex,parentassObject.Id,parentassObject,false)\\\">\\n  <app-each-object-render [eachassessableObject]=\\\"parentassObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\" [isfromTreeView]=\\\"true\\\"></app-each-object-render>\\n\\n</div>\\n</div>\\n<div *ngIf=\\\"currentIndex != 0 && parentId && schemaViewData[currentIndex] && schemaViewData[currentIndex].childAssessableObjs && schemaViewData[currentIndex].childAssessableObjs[parentId]\\\">\\n  <div *ngFor=\\\"let parentassObject of schemaViewData[currentIndex].childAssessableObjs[parentId]\\\" (click)=\\\"allrelatedObject(schemaViewData,currentIndex,parentassObject.Id,parentassObject,false)\\\">\\n    <app-each-object-render [eachassessableObject]=\\\"parentassObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\" [isfromTreeView]=\\\"true\\\"></app-each-object-render>\\n  </div>\\n</div>\\n\";","export default \"<div *ngIf=\\\"currentIndex == 0\\\">\\n  <div *ngFor=\\\"let parentassObject of schemaViewData[currentIndex].assessableObjs\\\" (click)=\\\"allrelatedObject(schemaViewData,currentIndex,parentassObject.Id,parentassObject,false)\\\">\\n  <app-each-object-render [eachassessableObject]=\\\"parentassObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\" [isfromTreeView]=\\\"false\\\"></app-each-object-render>\\n\\n</div>\\n</div>\\n<div *ngIf=\\\"currentIndex != 0 && parentId && schemaViewData[currentIndex] && schemaViewData[currentIndex].childAssessableObjs && schemaViewData[currentIndex].childAssessableObjs[parentId]\\\">\\n  <div *ngFor=\\\"let parentassObject of schemaViewData[currentIndex].childAssessableObjs[parentId]\\\"             (click)=\\\"allrelatedObject(schemaViewData,currentIndex,parentassObject.Id,parentassObject,false)\\\"\\n  >\\n    <app-each-object-render [eachassessableObject]=\\\"parentassObject\\\" [schemaViewData]=\\\"schemaViewData\\\" [currentIndex]=\\\"currentIndex\\\" [isfromTreeView]=\\\"false\\\"></app-each-object-render>\\n  </div>\\n  \\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N2Y29tcG9uZW50cy9lYWNoLWFtYnV0dG9uLXJlbmRlci9lYWNoLWFtYnV0dG9uLXJlbmRlci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component,Input, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-each-ambutton-render',\n  templateUrl: './each-ambutton-render.component.html',\n  styleUrls: ['./each-ambutton-render.component.scss'],\n})\nexport class EachAMButtonRenderComponent implements OnInit {\n@Input() eachassessableObject:any;\n@Input() schemaViewData:any;\n@Input() currentIndex:any;\n  constructor(public router: Router,) {\n    var _this=this;\n    console.log('EachAMButtonRenderComponent constructor',_this.eachassessableObject)\n    console.log('EachAMButtonRenderComponentconstructor schemaViewData',_this.schemaViewData)\n\n    console.log('EachAMButtonRenderComponent constructor currentIndex',_this.currentIndex)\n\n   }\n\n  ngOnInit() {\n    var _this=this;\n    console.log('EachAMButtonRenderComponent eachassessableObject',_this.eachassessableObject)\n    console.log('EachAMButtonRenderComponent schemaViewData',_this.schemaViewData)\n\n    console.log('EachAMButtonRenderComponent currentIndex',_this.currentIndex)\n\n  }\n  async openRelatedAMsDetailPage(am: any) {\n    console.log('openRelatedAMsDetailPage',am);\n     this.router.navigate(['/relate-amdetail-page', {\n       amData: JSON.stringify(am)\n       \n     }])\n   }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N2Y29tcG9uZW50cy9lYWNoLW9iamVjdC1yZW5kZXIvZWFjaC1vYmplY3QtcmVuZGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input,ElementRef, OnInit,QueryList,ViewChildren,AfterViewInit } from \"@angular/core\";\nimport { Injectable, NgZone } from '@angular/core';\nimport { ActivatedRoute,Router, NavigationExtras } from '@angular/router';\nimport { ActionSheetController, AlertController, IonCard, ModalController } from '@ionic/angular';\nimport { Gesture, GestureController } from '@ionic/angular';\nimport { GlobalParamService } from \"src/app/service/global-param.service\";\n\n@Component({\n  selector: 'app-each-object-render',\n  templateUrl: './each-object-render.component.html',\n  styleUrls: ['./each-object-render.component.scss'],\n})\nexport class EachObjectRenderComponent implements OnInit,AfterViewInit {\n  @Input() eachassessableObject: any;\n  @Input() schemaViewData: any;\n  @Input() currentIndex: any;\n  @Input() isfromTreeView:boolean;\n  isHaveChild=false;\n  componentRenderSuccess=false;\n  longPressActive = true;\n  @ViewChildren(IonCard, {read: ElementRef}) cards: QueryList<ElementRef>;\n\n  constructor(private zone: NgZone,private router: Router,public GlobalParamService:GlobalParamService ,private gestureCtrl: GestureController, private actionSheetCtrl: ActionSheetController) {\n   }\n\n  ngOnInit() {\n    var _this=this;\n    console.log('EachObjectRenderComponent ngOnInit textthis.assessableObject',_this.eachassessableObject);\n\n    console.log('EachObjectRenderComponent this.schemaViewData',_this.schemaViewData);\n    console.log('EachObjectRenderComponent this.currentIndex',_this.currentIndex);\n  }\n  RelatedChildRendercall() {\n    console.log('RelatedChildRendercall');\n    var _this=this;\n    if (this.isHaveChild) {\n      this.isHaveChild = false;\n    } else {\n      this.isHaveChild = true;\n    }\n  }\n \n  ishaveChild(schemaViewData,currentIndex,eachassessableObject){\n       // return new Promise((resolve, reject) => {\n        \n     var ishaveChild=false;\n          if(schemaViewData &&\n            schemaViewData[currentIndex] &&\n            schemaViewData[currentIndex].relatedObjectsIndex &&\n            schemaViewData[currentIndex].relatedObjectsIndex.length > 0){\n              Object.keys(schemaViewData[currentIndex]\n                .relatedObjectsIndex).forEach(function(relatedObjectsIndex){\n                 // console.log('relatedObjectsIndex',relatedObjectsIndex);\n                  var relatedIndex=schemaViewData[currentIndex]\n                  .relatedObjectsIndex[relatedObjectsIndex];\n                  //console.log('relatedIndex',relatedIndex);\n\n                  if( schemaViewData &&\n                    schemaViewData[relatedIndex] &&\n                    schemaViewData[relatedIndex].childAssessableObjs &&\n                    schemaViewData[relatedIndex].childAssessableObjs[\n                      eachassessableObject.Id\n                    ] &&\n                    schemaViewData[relatedIndex].childAssessableObjs[\n                      eachassessableObject.Id\n                    ].length > 0){\n                     // console.log('ishaveChild',ishaveChild);\n                      ishaveChild=true;\n                      return ishaveChild;\n                    }\n                })\n                //console.log('outside loop ishaveChild',ishaveChild);\n\n                return ishaveChild;\n            }else{\n              return ishaveChild;\n            }\n      //});\n     }\n\n     ngAfterViewInit() {\n      console.log('ngAfterViewInit',this.cards)\n      var cardArray=this.cards.toArray();\n      for(let i=0;i<cardArray.length;i++){\n      //this.cards.changes.subscribe(c => { c.toArray().forEach(card => { \n        const card = cardArray[i];\n        console.log(\":::::: THIS CARD HAS USE LONG PRESS: \"+card);\n        //let i = c.toArray().indexOf(card)\n  \n        let startTime = Date.now();\n  \n        const gesture: Gesture = this.gestureCtrl.create({\n          el: card.nativeElement,\n          threshold: 0,\n          gestureName: 'long-press',\n          onStart: ev => {\n            this.longPressActive=true;\n            startTime = Date.now();\n            setTimeout(() => {\n              if(this.longPressActive === true){\n                console.log('inside true')\n\n                this.actionSheetopen();\n                this.longPressActive = false;\n              }\n            }, 1000);\n            \n          },\n          onEnd: ev => {\n            const duration = Date.now() - startTime;\n  \n            if (duration < 1000) {\n              console.log('less than 100')\n             // this.navigate(this.assessableObjs[i], this.schemaViewData)\n              this.longPressActive = false;\n            } else {\n              console.log('else than 100')\n\n              this.longPressActive = true;\n            }\n          \n          }\n        });\n        gesture.enable(true); \n\n        }\n  \n      //}) \n    \n    }\n  \n    async actionSheetopen() {\n  \n      console.log('actionSheetopen')\n     \n      let buttonArray = [];\n      if(this.schemaViewData[0].optionConfigDetailsMap['disableRelatedObj'] !== 'false'){\n        buttonArray.push({text : 'Related Records',\n        handler: () => {\n          console.log('call here action sheet method all related obj')\n          this.allrelatedObject(this.schemaViewData,this.currentIndex,this.eachassessableObject.Id,this.eachassessableObject,false)\n      }})\n    }\n    if(this.schemaViewData[0].optionConfigDetailsMap['disableObjectAdd'] !== 'false'){\n        buttonArray.push({text : 'Add object',\n        handler: () => {\n          console.log('disableObjectAdd obj')\n      }})\n    }\n    if(true){\n      buttonArray.push({text : 'Submit Feedback',\n      handler: () => {\n        console.log('obj')\n    }})\n  }\n      const actionSheet = await this.actionSheetCtrl.create({\n        header: 'Actions',\n        buttons: buttonArray,\n      });\n  \n      await actionSheet.present();\n    }\n    allrelatedObject( schemaViewData1: any,relatedIndex1:any,parentId1: any,eachassessableObject1: any,isfrom1:boolean){\n      var _this=this;\n      //here call common page \n      console.log('call from EachRelatedObjButtonRenderComponent schemaViewData',schemaViewData1);\n      console.log('call from EachRelatedObjButtonRenderComponent currentIndex',relatedIndex1);\n      console.log('call from EachRelatedObjButtonRenderComponent eachassessableObject',eachassessableObject1);\n      console.log('call from EachRelatedObjButtonRenderComponent parentId',parentId1);\n      console.log('isfrom from button',isfrom1);\n      \n      \n      //  let parentnavigationExtras = {\n      //   state: {\n      //     schemaViewData:_this.schemaViewData,\n      //     currentIndex:_this.currentIndex,\n      //     parentId:_this.eachassessableObject.Id,\n      //     eachassessableObject:_this.eachassessableObject,\n      //     isFromback:false\n      //   }\n       \n      // };\n      \n    // _this.index++;\n  \n      let navigationExtras = {\n        state: {\n          schemaViewData:schemaViewData1,\n          currentIndex:relatedIndex1,\n          parentId:eachassessableObject1.Id,\n          eachassessableObject:eachassessableObject1,\n          isFromback:isfrom1,\n          isFrom:'allRelatedcall'\n        }\n       \n      };\n      console.log('isfrom1',isfrom1);\n      console.log('call from EachRelatedObjButtonRenderComponent navigationExtras',navigationExtras);\n      //_this.zone.run(() => {\n        // _this.router.navigate(['/related-object'], {\n        //   relativeTo: _this.activatedRoute,\n        //   queryParams: { index: _this.index, schemaViewData:JSON.stringify(schemaViewData),\n        //     relatedIndex:relatedIndex,\n        //     parentId:parentId, },\n        //   queryParamsHandling: 'merge'\n        // });\n        if(!isfrom1){\n          _this.GlobalParamService.trackparamFormObjRedirect.push(navigationExtras);\n      \n        }\n        _this.router.navigate(['/redirectpageforrelatedlevel-obj'],navigationExtras);\n      //});\n  \n  \n    }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N2Y29tcG9uZW50cy9lYWNoLXJlbGF0ZWQtb2JqLWJ1dHRvbi1yZW5kZXIvZWFjaC1yZWxhdGVkLW9iai1idXR0b24tcmVuZGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component,Input, OnInit } from '@angular/core';\nimport { NgZone } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { GlobalParamService } from 'src/app/service/global-param.service';\n@Component({\n  selector: 'app-each-related-obj-button-render',\n  templateUrl: './each-related-obj-button-render.component.html',\n  styleUrls: ['./each-related-obj-button-render.component.scss'],\n})\nexport class EachRelatedObjButtonRenderComponent implements OnInit {\n  @Input() eachassessableObject:any;\n  @Input() schemaViewData:any;\n  @Input() currentIndex:any;\n  @Input() parentId:any;\n  @Input() isFromback:boolean;\n  constructor( public router: Router,public GlobalParamService:GlobalParamService) { }\n\n  ngOnInit() {\n    var _this=this;\n    console.log('EachRelatedObjButtonRenderComponent eachassessableObject',_this.eachassessableObject)\n    console.log('EachRelatedObjButtonRenderComponent schemaViewData',_this.schemaViewData)\n\n    console.log('EachRelatedObjButtonRenderComponent currentIndex',_this.currentIndex)\n\n  }\n  relatedObject( schemaViewData1: any,relatedIndex1:any,parentId1: any,eachassessableObject1: any,isfrom1:boolean){\n    var _this=this;\n    //here call common page \n    console.log('call from EachRelatedObjButtonRenderComponent schemaViewData',schemaViewData1);\n    console.log('call from EachRelatedObjButtonRenderComponent currentIndex',relatedIndex1);\n    console.log('call from EachRelatedObjButtonRenderComponent eachassessableObject',eachassessableObject1);\n    console.log('call from EachRelatedObjButtonRenderComponent parentId',parentId1);\n    console.log('isfrom from button',isfrom1);\n    console.log('call from EachRelatedObjButtonRenderComponent _this.schemaViewData',_this.schemaViewData);\n    console.log('call from EachRelatedObjButtonRenderComponent _this.currentIndex',_this.currentIndex);\n    console.log('call from EachRelatedObjButtonRenderComponent _this.eachassessableObject',_this.eachassessableObject);\n    console.log('isfrom from button',isfrom1);\n    \n    //  let parentnavigationExtras = {\n    //   state: {\n    //     schemaViewData:_this.schemaViewData,\n    //     currentIndex:_this.currentIndex,\n    //     parentId:_this.eachassessableObject.Id,\n    //     eachassessableObject:_this.eachassessableObject,\n    //     isFromback:false\n    //   }\n     \n    // };\n    \n  // _this.index++;\n\n    let navigationExtras = {\n      state: {\n        schemaViewData:schemaViewData1,\n        currentIndex:relatedIndex1,\n        parentId:eachassessableObject1.Id,\n        eachassessableObject:eachassessableObject1,\n        isFromback:isfrom1,\n        isFrom:'objectButtoncall'\n      }\n     \n    };\n    console.log('isfrom1',isfrom1);\n    console.log('call from EachRelatedObjButtonRenderComponent navigationExtras',navigationExtras);\n    //_this.zone.run(() => {\n      // _this.router.navigate(['/related-object'], {\n      //   relativeTo: _this.activatedRoute,\n      //   queryParams: { index: _this.index, schemaViewData:JSON.stringify(schemaViewData),\n      //     relatedIndex:relatedIndex,\n      //     parentId:parentId, },\n      //   queryParamsHandling: 'merge'\n      // });\n      if(!isfrom1){\n        _this.GlobalParamService.trackparamFormObjRedirect.push(navigationExtras);\n    \n      }\n      _this.router.navigate(['/redirectpageforrelatedlevel-obj'],navigationExtras);\n    //});\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N2Y29tcG9uZW50cy90cmVlLXZpZXctZW5hYmxlZC90cmVlLXZpZXctZW5hYmxlZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input,ElementRef, OnInit,QueryList,ViewChildren } from \"@angular/core\";\nimport { Injectable, NgZone } from '@angular/core';\nimport { ActivatedRoute,Router, NavigationExtras } from '@angular/router';\nimport { ActionSheetController, AlertController, IonCard, ModalController } from '@ionic/angular';\nimport { Gesture, GestureController } from '@ionic/angular';\n\nimport { GlobalParamService } from \"src/app/service/global-param.service\";\n@Component({\n  selector: 'app-tree-view-enabled',\n  templateUrl: './tree-view-enabled.component.html',\n  styleUrls: ['./tree-view-enabled.component.scss'],\n})\nexport class TreeViewEnabledComponent implements OnInit {\n  @Input() schemaViewData: any;\n  @Input() currentIndex: any;\n  \n  @Input() parentId: any;\n\n\n  constructor(private zone: NgZone,private router: Router,public GlobalParamService:GlobalParamService ,private gestureCtrl: GestureController, private actionSheetCtrl: ActionSheetController) {\n    var _this = this;\n    console.log(\n      \"Date tree-view-not-enabled  comp[onent].schemaViewData\",\n      _this.schemaViewData\n    );\n   }\n\n  ngOnInit() {\n    var _this = this;\n    console.log(\n      \"Date tree-view-not-enabled ngOnInit comp[onent].schemaViewData\",\n      _this.schemaViewData\n    );\n    console.log(\"currentIndex\", _this.currentIndex);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N2Y29tcG9uZW50cy90cmVlLXZpZXctbm90LWVuYWJsZWQvdHJlZS12aWV3LW5vdC1lbmFibGVkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Injectable, NgZone } from '@angular/core';\nimport { ActivatedRoute,Router, NavigationExtras } from '@angular/router';\nimport { GlobalParamService } from \"src/app/service/global-param.service\";\n@Component({\n  selector: \"app-tree-view-not-enabled\",\n  templateUrl: \"./tree-view-not-enabled.component.html\",\n  styleUrls: [\"./tree-view-not-enabled.component.scss\"],\n})\nexport class TreeViewNotEnabledComponent implements OnInit {\n  @Input() schemaViewData: any;\n  @Input() currentIndex: any;\n  \n  @Input() parentId: any;\n  index: number;\n\n  constructor(private zone: NgZone,private router: Router,public activatedRoute : ActivatedRoute,public GlobalParamService:GlobalParamService) {\n    var _this = this;\n    console.log(\n      \"Date tree-view-not-enabled  comp[onent].schemaViewData\",\n      _this.schemaViewData\n    );\n    _this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    _this.router.onSameUrlNavigation = 'reload';\n    console.log(\"currentIndex\", _this.currentIndex);\n  }\n\n  ngOnInit() {\n    var _this = this;\n    console.log(\n      \"Date tree-view-not-enabled ngOnInit comp[onent].schemaViewData\",\n      _this.schemaViewData\n    );\n    console.log(\"currentIndex\", _this.currentIndex);\n    \n  }\n  toNumber(value: string): number {\n    return parseInt(value);\n  }\n  \n  allrelatedObject( schemaViewData1: any,relatedIndex1:any,parentId1: any,eachassessableObject1: any,isfrom1:boolean){\n    var _this=this;\n    //here call common page \n    console.log('call from EachRelatedObjButtonRenderComponent schemaViewData',schemaViewData1);\n    console.log('call from EachRelatedObjButtonRenderComponent currentIndex',relatedIndex1);\n    console.log('call from EachRelatedObjButtonRenderComponent eachassessableObject',eachassessableObject1);\n    console.log('call from EachRelatedObjButtonRenderComponent parentId',parentId1);\n    console.log('isfrom from button',isfrom1);\n    \n    \n    //  let parentnavigationExtras = {\n    //   state: {\n    //     schemaViewData:_this.schemaViewData,\n    //     currentIndex:_this.currentIndex,\n    //     parentId:_this.eachassessableObject.Id,\n    //     eachassessableObject:_this.eachassessableObject,\n    //     isFromback:false\n    //   }\n     \n    // };\n    \n  // _this.index++;\n\n    let navigationExtras = {\n      state: {\n        schemaViewData:schemaViewData1,\n        currentIndex:relatedIndex1,\n        parentId:eachassessableObject1.Id,\n        eachassessableObject:eachassessableObject1,\n        isFromback:isfrom1,\n        isFrom:'allRelatedcall'\n      }\n     \n    };\n    console.log('isfrom1',isfrom1);\n    console.log('call from EachRelatedObjButtonRenderComponent navigationExtras',navigationExtras);\n    //_this.zone.run(() => {\n      // _this.router.navigate(['/related-object'], {\n      //   relativeTo: _this.activatedRoute,\n      //   queryParams: { index: _this.index, schemaViewData:JSON.stringify(schemaViewData),\n      //     relatedIndex:relatedIndex,\n      //     parentId:parentId, },\n      //   queryParamsHandling: 'merge'\n      // });\n      if(!isfrom1){\n        _this.GlobalParamService.trackparamFormObjRedirect.push(navigationExtras);\n    \n      }\n      _this.router.navigate(['/redirectpageforrelatedlevel-obj'],navigationExtras);\n    //});\n\n\n  }\n  // async relatedObject(schemaViewData: any, relatedIndex: any,parentId: any) {\n  //   var _this=this;\n  //   console.log('schemaViewData',schemaViewData);\n  //   console.log('relatedIndex',relatedIndex);\n  //   console.log('parentId',parentId);\n  //   _this.index++;\n\n  //   let navigationExtras = {\n  //     state: {\n  //       schemaViewData:schemaViewData,\n  //       relatedIndex:relatedIndex,\n  //       parentId:parentId,\n  //     }\n     \n  //   };\n  //   console.log('navigationExtras',navigationExtras);\n   \n  //   _this.zone.run(() => {\n  //     // _this.router.navigate(['/related-object'], {\n  //     //   relativeTo: _this.activatedRoute,\n  //     //   queryParams: { index: _this.index, schemaViewData:JSON.stringify(schemaViewData),\n  //     //     relatedIndex:relatedIndex,\n  //     //     parentId:parentId, },\n  //     //   queryParamsHandling: 'merge'\n  //     // });\n  //     _this.router.navigate(['/related-object'],navigationExtras);\n  //   });\n\n  // }\n\n}\n"]}